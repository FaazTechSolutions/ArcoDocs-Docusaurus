"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5314],{4197:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"Individual Contract/Pricing and Tax/Tax Setup","title":"Tax Setup","description":"Purpose","source":"@site/docs/Individual Contract/Pricing and Tax/Tax Setup.md","sourceDirName":"Individual Contract/Pricing and Tax","slug":"/Individual Contract/Pricing and Tax/Tax Setup","permalink":"/ArcoDocs-Docusaurus/docs/Individual Contract/Pricing and Tax/Tax Setup","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Individual Contract/Pricing and Tax/Tax Setup.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Expense Setup","permalink":"/ArcoDocs-Docusaurus/docs/Individual Contract/Pricing and Tax/Expense Setup"},"next":{"title":"Expense Salary","permalink":"/ArcoDocs-Docusaurus/docs/Individual Contract/Pricing and Tax/Expense Salary"}}');var a=i(4848),r=i(8453);const s={sidebar_position:4},o="Tax Setup",c={},d=[{value:"Purpose",id:"purpose",level:2},{value:"Tax Configuration Fields",id:"tax-configuration-fields",level:3}];function l(e){const n={h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"tax-setup",children:"Tax Setup"})}),"\n",(0,a.jsx)(n.h2,{id:"purpose",children:"Purpose"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"The Tax Setup module defines the master configuration for applying tax on specific services or expense types, based on relation rules and contract types."}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"tax-configuration-fields",children:"Tax Configuration Fields"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"To create a tax setup entry, the following fields must be specified:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Relation Type (Record, Group, All)"}),"\n",(0,a.jsx)(n.li,{children:"Relation Type Id"}),"\n",(0,a.jsx)(n.li,{children:"Relation Category Type (Record, Group, All)"}),"\n",(0,a.jsx)(n.li,{children:"Relation Category Type Id (Visa charge, Iqama charge, Medical test, etc,.)"}),"\n",(0,a.jsx)(n.li,{children:"Add in Contract (Business, Individual, Both)"}),"\n",(0,a.jsx)(n.li,{children:"Tax Percentage"}),"\n",(0,a.jsx)(n.li,{children:"Valid From"}),"\n",(0,a.jsx)(n.li,{children:"Tax Breakup Days (Less than 180, More than 180)"}),"\n"]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var t=i(6540);const a={},r=t.createContext(a);function s(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);